let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <C-;> 
imap <C-Space> 
inoremap <silent> <Plug>delimitMate> =delimitMate#JumpOut("\>")
inoremap <silent> <Plug>delimitMate< <=delimitMate#ParenDelim(">")
imap <D-BS> 
imap <M-BS> 
imap <M-Down> }
inoremap <D-Down> <C-End>
imap <M-Up> {
inoremap <D-Up> <C-Home>
noremap! <M-Right> <C-Right>
noremap! <D-Right> <End>
noremap! <M-Left> <C-Left>
noremap! <D-Left> <Home>
inoremap <silent> <Plug>NERDCommenterInInsert  <BS>:call NERDComment(0, "insert")
inoremap <silent> <Plug>delimitMateMRightMouse =delimitMate#Finish(1)<RightMouse>
inoremap <silent> <Plug>delimitMateMLeftMouse =delimitMate#Finish(1)<LeftMouse>
inoremap <silent> <Plug>delimitMateDel =delimitMate#Del()
inoremap <silent> <Plug>delimitMateS-Tab =delimitMate#JumpAny("\<S-Tab>")
inoremap <silent> <Plug>delimitMateSpace =delimitMate#ExpandSpace()
inoremap <silent> <Plug>delimitMateCR =delimitMate#ExpandReturn()
inoremap <silent> <expr> <Plug>delimitMateS-BS delimitMate#WithinEmptyPair() ? "\=delimitMate#Del()\" : "\<S-BS>"
inoremap <silent> <Plug>delimitMateBS =delimitMate#BS()
inoremap <silent> <Plug>delimitMate` =delimitMate#QuoteDelim("\`")
inoremap <silent> <Plug>delimitMate' =delimitMate#QuoteDelim("\'")
inoremap <silent> <Plug>delimitMate" =delimitMate#QuoteDelim("\"")
inoremap <silent> <Plug>delimitMate] =delimitMate#JumpOut("\]")
inoremap <silent> <Plug>delimitMate} =delimitMate#JumpOut("\}")
inoremap <silent> <Plug>delimitMate) =delimitMate#JumpOut("\)")
inoremap <silent> <Plug>delimitMate[ [=delimitMate#ParenDelim("]")
inoremap <silent> <Plug>delimitMate{ {=delimitMate#ParenDelim("}")
inoremap <silent> <Plug>delimitMate( (=delimitMate#ParenDelim(")")
inoremap <silent> <SNR>41_yrrecord =YRRecord3()
inoremap <silent> <S-Tab> =BackwardsSnippet()
inoremap <Nul> 
map! <D-v> *
snoremap <silent> 	 i<Right>=TriggerSnippet()
nnoremap <silent>  :YRReplace '1', 'p'
nnoremap <silent>  :YRReplace '-1', 'P'
snoremap  b<BS>
vnoremap  bd :BD
nnoremap  bd :BD
onoremap  bd :BD
nmap  ig :IndentGuidesToggle
nmap  ca <Plug>NERDCommenterAltDelims
vmap  cA <Plug>NERDCommenterAppend
nmap  cA <Plug>NERDCommenterAppend
vmap  c$ <Plug>NERDCommenterToEOL
nmap  c$ <Plug>NERDCommenterToEOL
vmap  cu <Plug>NERDCommenterUncomment
nmap  cu <Plug>NERDCommenterUncomment
vmap  cn <Plug>NERDCommenterNest
nmap  cn <Plug>NERDCommenterNest
vmap  cb <Plug>NERDCommenterAlignBoth
nmap  cb <Plug>NERDCommenterAlignBoth
vmap  cl <Plug>NERDCommenterAlignLeft
nmap  cl <Plug>NERDCommenterAlignLeft
vmap  cy <Plug>NERDCommenterYank
nmap  cy <Plug>NERDCommenterYank
vmap  ci <Plug>NERDCommenterInvert
nmap  ci <Plug>NERDCommenterInvert
vmap  cs <Plug>NERDCommenterSexy
nmap  cs <Plug>NERDCommenterSexy
vmap  cm <Plug>NERDCommenterMinimal
nmap  cm <Plug>NERDCommenterMinimal
vmap  c  <Plug>NERDCommenterToggle
nmap  c  <Plug>NERDCommenterToggle
vmap  cc <Plug>NERDCommenterComment
nmap  cc <Plug>NERDCommenterComment
nmap <silent>  ba <Plug>BufKillAlt
nmap <silent>  bundo <Plug>BufKillUndo
nmap <silent>  !bw <Plug>BufKillBangBw
nmap <silent>  bw <Plug>BufKillBw
nmap <silent>  !bd <Plug>BufKillBangBd
nmap <silent>  !bun <Plug>BufKillBangBun
nmap <silent>  bun <Plug>BufKillBun
nmap <silent>  bf <Plug>BufKillForward
nmap <silent>  bb <Plug>BufKillBack
nnoremap  t :TagbarToggle
nnoremap  soa :s/->\([a-zA-Z_]*\)/\['\1'\]/
nnoremap <silent>  jsb :call g:Jsbeautify()
map  w :wa
vmap  tbh :Tabularize /[a-z]\+=/l1l0
nmap  tbh :Tabularize /[a-z]\+=/l1l0
nnoremap <silent>  gs :Gstatus)
nnoremap <silent>  gl :Glog
nnoremap <silent>  gd :Gdiff
nnoremap <silent>  gc :Gcommit
nnoremap <silent>  gb :Gblame
noremap  ;b :CommandTBuffer
noremap  ;f :CommandT
nnoremap <silent>  ft :FufTag
nnoremap <silent>  fh :FufHelp
nnoremap <silent>  ff :FufFile
nnoremap <silent>  fd :FufDir
nnoremap <silent>  fb :FufBuffer
map  et :tabe %%
map  ev :vsp %%
map  es :sp %%
map  ew :e %%
nnoremap  u :GundoToggle
map  tm :tabmove 
map  tq :tabclose
map  to :tabnew
map  tN :tabNext
map  tn :tabnext
map  mo :set mouse=
map  ma :set mouse=a
nnoremap <silent>  y :YRShow
map <silent>  hc :noh
map  s? z=
map  sa zg
map  sp [s
map  sn ]s
map  ss :setlocal spell!
nnoremap <silent>  N :NERDTreeFind
nnoremap  n :NERDTreeToggle
snoremap % b<BS>%
snoremap ' b<BS>'
vnoremap < <gv
vnoremap > >gv
inoremap <expr> Â¬ pumvisible() ? '' : '=pumvisible() ? "\<Down>" : ""'
xnoremap <silent> P :YRPaste 'P', 'v'
nnoremap <silent> P :YRPaste 'P'
xmap S <Plug>VSurround
snoremap U b<BS>U
noremap Y y$
nmap [xx <Plug>unimpairedLineXmlEncode
xmap [x <Plug>unimpairedXmlEncode
nmap [x <Plug>unimpairedXmlEncode
nmap [uu <Plug>unimpairedLineUrlEncode
xmap [u <Plug>unimpairedUrlEncode
nmap [u <Plug>unimpairedUrlEncode
nmap [yy <Plug>unimpairedLineStringEncode
xmap [y <Plug>unimpairedStringEncode
nmap [y <Plug>unimpairedStringEncode
xmap [e <Plug>unimpairedMoveUp
nmap [e <Plug>unimpairedMoveUp
nmap [  <Plug>unimpairedBlankUp
nmap [o <Plug>unimpairedOPrevious
nmap <silent> [Q <Plug>unimpairedQFirst
nmap <silent> [q <Plug>unimpairedQPrevious
nmap <silent> [L <Plug>unimpairedLFirst
nmap <silent> [l <Plug>unimpairedLPrevious
nmap <silent> [B <Plug>unimpairedBFirst
nmap <silent> [b <Plug>unimpairedBPrevious
nmap <silent> [A <Plug>unimpairedAFirst
nmap <silent> [a <Plug>unimpairedAPrevious
snoremap \ b<BS>\
nmap ]xx <Plug>unimpairedLineXmlDecode
xmap ]x <Plug>unimpairedXmlDecode
nmap ]x <Plug>unimpairedXmlDecode
nmap ]uu <Plug>unimpairedLineUrlDecode
xmap ]u <Plug>unimpairedUrlDecode
nmap ]u <Plug>unimpairedUrlDecode
nmap ]yy <Plug>unimpairedLineStringDecode
xmap ]y <Plug>unimpairedStringDecode
nmap ]y <Plug>unimpairedStringDecode
xmap ]e <Plug>unimpairedMoveDown
nmap ]e <Plug>unimpairedMoveDown
nmap ]  <Plug>unimpairedBlankDown
nmap ]o <Plug>unimpairedONext
nmap <silent> ]Q <Plug>unimpairedQLast
nmap <silent> ]q <Plug>unimpairedQNext
nmap <silent> ]L <Plug>unimpairedLLast
nmap <silent> ]l <Plug>unimpairedLNext
nmap <silent> ]B <Plug>unimpairedBLast
nmap <silent> ]b <Plug>unimpairedBNext
nmap <silent> ]A <Plug>unimpairedALast
nmap <silent> ]a <Plug>unimpairedANext
snoremap ^ b<BS>^
snoremap ` b<BS>`
nmap cs <Plug>Csurround
nmap ds <Plug>Dsurround
xnoremap <silent> d :YRDeleteRange 'v'
nmap gx <Plug>NetrwBrowseX
xmap gS <Plug>VgSurround
nnoremap <silent> gp :YRPaste 'gp'
nnoremap <silent> gP :YRPaste 'gP'
vnoremap <silent> me :call EasyMotionE(1, 0)
onoremap <silent> me :call EasyMotionE(0, 0)
nnoremap <silent> me :call EasyMotionE(0, 0)
vnoremap <silent> mE :call EasyMotionEW(1, 0)
onoremap <silent> mE :call EasyMotionEW(0, 0)
nnoremap <silent> mE :call EasyMotionEW(0, 0)
vnoremap <silent> mB :call EasyMotionWBW(1, 1)
onoremap <silent> mB :call EasyMotionWBW(0, 1)
nnoremap <silent> mB :call EasyMotionWBW(0, 1)
vnoremap <silent> mW :call EasyMotionWBW(1, 0)
onoremap <silent> mW :call EasyMotionWBW(0, 0)
nnoremap <silent> mW :call EasyMotionWBW(0, 0)
vnoremap <silent> mj :call EasyMotionJK(1, 0)
onoremap <silent> mj :call EasyMotionJK(0, 0)
nnoremap <silent> mj :call EasyMotionJK(0, 0)
vnoremap <silent> mT :call EasyMotionT(1, 1)
onoremap <silent> mT :call EasyMotionT(0, 1)
nnoremap <silent> mT :call EasyMotionT(0, 1)
vnoremap <silent> mge :call EasyMotionE(1, 1)
onoremap <silent> mge :call EasyMotionE(0, 1)
nnoremap <silent> mge :call EasyMotionE(0, 1)
vnoremap <silent> mw :call EasyMotionWB(1, 0)
onoremap <silent> mw :call EasyMotionWB(0, 0)
nnoremap <silent> mw :call EasyMotionWB(0, 0)
vnoremap <silent> mf :call EasyMotionF(1, 0)
onoremap <silent> mf :call EasyMotionF(0, 0)
nnoremap <silent> mf :call EasyMotionF(0, 0)
vnoremap <silent> mF :call EasyMotionF(1, 1)
onoremap <silent> mF :call EasyMotionF(0, 1)
nnoremap <silent> mF :call EasyMotionF(0, 1)
vnoremap <silent> mt :call EasyMotionT(1, 0)
onoremap <silent> mt :call EasyMotionT(0, 0)
nnoremap <silent> mt :call EasyMotionT(0, 0)
vnoremap <silent> mk :call EasyMotionJK(1, 1)
onoremap <silent> mk :call EasyMotionJK(0, 1)
nnoremap <silent> mk :call EasyMotionJK(0, 1)
vnoremap <silent> mb :call EasyMotionWB(1, 1)
onoremap <silent> mb :call EasyMotionWB(0, 1)
nnoremap <silent> mb :call EasyMotionWB(0, 1)
vnoremap <silent> mgE :call EasyMotionEW(1, 1)
onoremap <silent> mgE :call EasyMotionEW(0, 1)
nnoremap <silent> mgE :call EasyMotionEW(0, 1)
xnoremap <silent> p :YRPaste 'p', 'v'
nnoremap <silent> p :YRPaste 'p'
xmap s <Plug>Vsurround
xnoremap <silent> x :YRDeleteRange 'v'
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
xnoremap <silent> y :YRYankRange 'v'
onoremap <C-Space> 
vnoremap <C-Space> gV
nnoremap <C-Space> a
map <M-Down> }
noremap <D-Down> <C-End>
map <M-Up> {
noremap <D-Up> <C-Home>
noremap <M-Right> <C-Right>
noremap <D-Right> <End>
noremap <M-Left> <C-Left>
noremap <D-Left> <Home>
snoremap <Left> bi
snoremap <Right> a
snoremap <BS> b<BS>
snoremap <silent> <S-Tab> i<Right>=BackwardsSnippet()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
xnoremap <silent> <Plug>unimpairedMoveDown :exe 'norm m`'|exe '''<,''>move''>+'.v:count1``
xnoremap <silent> <Plug>unimpairedMoveUp :exe 'norm m`'|exe '''<,''>move--'.v:count1``
nnoremap <silent> <Plug>unimpairedMoveDown :exe 'norm m`'|exe 'move+'.v:count1``
nnoremap <silent> <Plug>unimpairedMoveUp :exe 'norm m`'|exe 'move--'.v:count1``
nnoremap <silent> <Plug>unimpairedBlankDown :put =repeat(nr2char(10),v:count)|'[-1
nnoremap <silent> <Plug>unimpairedBlankUp :put!=repeat(nr2char(10),v:count)|']+1
nmap <silent> <Plug>unimpairedQLast :exe "clast ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedQFirst :exe "cfirst ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedQNext :exe "cnext ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedQPrevious :exe "cprevious ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedLLast :exe "llast ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedLFirst :exe "lfirst ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedLNext :exe "lnext ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedLPrevious :exe "lprevious ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedBLast :exe "blast ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedBFirst :exe "bfirst ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedBNext :exe "bnext ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedBPrevious :exe "bprevious ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedALast :exe "last ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedAFirst :exe "first ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedANext :exe "next ".(v:count ? v:count : "")
nmap <silent> <Plug>unimpairedAPrevious :exe "previous ".(v:count ? v:count : "")
nmap <silent> <Plug>NERDCommenterAppend :call NERDComment(0, "append")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment(0, "toEOL")
vnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(1, "uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(0, "uncomment")
vnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(1, "nested")
nnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(0, "nested")
vnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(1, "alignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(0, "alignBoth")
vnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(1, "alignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(0, "alignLeft")
vmap <silent> <Plug>NERDCommenterYank :call NERDComment(1, "yank")
nmap <silent> <Plug>NERDCommenterYank :call NERDComment(0, "yank")
vnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(1, "invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(0, "invert")
vnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(1, "sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(0, "sexy")
vnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(1, "minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(0, "minimal")
vnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(1, "toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(0, "toggle")
vnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(1, "norm")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(0, "norm")
nnoremap <silent> <SNR>41_yrrecord :call YRRecord3()
nnoremap <F2> :set invpaste paste?
nmap <silent> <F4> :!ctags -f ./tags --langmap="php:+.inc" -h ".php.inc" -R --totals=yes --tag-relative=yes --PHP-kinds=+cf-v .
onoremap <Nul> 
vnoremap <Nul> gV
nnoremap <Nul> a
xmap <BS> "-d
vmap <D-x> "*d
vmap <D-c> "*y
vmap <D-v> "-d"*P
nmap <D-v> "*P
imap S <Plug>ISurround
imap s <Plug>Isurround
inoremap <silent> 	 =TriggerSnippet()
inoremap <NL> A;o
inoremap <expr>  pumvisible() ? "\" : "\u\"
inoremap <expr>  pumvisible() ? '' : '=pumvisible() ? "\<Down>" : ""'
inoremap <silent> 	 =ShowAvailableSnips()
imap  <Plug>Isurround
imap  =CtrlXPP()
cnoremap %% =expand('%:h').'/'
imap ; 
inoremap ` 
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set background=dark
set backspace=indent,eol,start
set completeopt=longest,menuone
set expandtab
set fileencodings=ucs-bom,utf-8,default,latin1
set guifont=Mensch
set guioptions=egrLtT
set guitablabel=%M%t
set helplang=en
set hidden
set hlsearch
set ignorecase
set incsearch
set langmenu=none
set laststatus=2
set mouse=a
set omnifunc=syntaxcomplete#Complete
set pastetoggle=<F2>
set printexpr=system('open\ -a\ Preview\ '.v:fname_in)\ +\ v:shell_error
set ruler
set runtimepath=~/.vim,~/.vim/bundle/Better-CSS-Syntax-for-Vim,~/.vim/bundle/FuzzyFinder,~/.vim/bundle/IndentAnything,~/.vim/bundle/L9,~/.vim/bundle/SuperTab,~/.vim/bundle/YankRing.vim,~/.vim/bundle/bufexplorer.zip,~/.vim/bundle/bufkill.vim,~/.vim/bundle/command-t,~/.vim/bundle/css_color.vim,~/.vim/bundle/delimitMate,~/.vim/bundle/gundo.vim,~/.vim/bundle/mru.vim,~/.vim/bundle/nerdcommenter,~/.vim/bundle/nerdtree,~/.vim/bundle/phpcomplete,~/.vim/bundle/snipmate.vim,~/.vim/bundle/tabular,~/.vim/bundle/tagbar,~/.vim/bundle/taglist-plus,~/.vim/bundle/tir_black,~/.vim/bundle/unimpaired.vim,~/.vim/bundle/vim-colors-solarized,~/.vim/bundle/vim-easymotion,~/.vim/bundle/vim-fugitive,~/.vim/bundle/vim-indent-guides,~/.vim/bundle/vim-javascript,~/.vim/bundle/vim-repeat,~/.vim/bundle/vim-sparkup,~/.vim/bundle/vim-surround,~/.vim/bundle/vim-tmux,~/.vim/bundle/vundle,~/.vim/bundle/web-indent,/usr/local/Cellar/macvim/7.3-57/MacVim.app/Contents/Resources/vim/vimfiles,/usr/local/Cellar/macvim/7.3-57/MacVim.app/Contents/Resources/vim/runtime
set sessionoptions=blank,buffers,curdir,folds,globals,help,localoptions,options,resize,tabpages,winsize,winpos
set shiftwidth=2
set showcmd
set smartcase
set smartindent
set softtabstop=2
set statusline=%n\ %r%m\ %f%=%w%y%{fugitive#statusline()}[%l/%L:%c]%{strftime(\"%l:%M%p\ %m/%d\")}
set tabline=%!MyTabLine()
set tabpagemax=15
set tabstop=2
set tags=tags;/
set termencoding=utf-8
set title
set titlestring=%F\ -\ Vim
set undodir=~/.vim_runtime/undodir
set undofile
set updatetime=100
set wildignore=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*
set wildmode=list:longest,list:full
set window=60
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
let NERDTreeMapPreviewSplit = "gi"
let NERDTreeMapCloseChildren = "X"
let NERDTreeShowHidden =  1 
let MRU_Include_Files = ""
let SuperTabDefaultCompletionType = "context"
let Tlist_Enable_Fold_Column =  1 
let NERDSpaceDelims = "0"
let NERDTreeMapCloseDir = "x"
let Tlist_Show_One_File =  0 
let NERDTreeMinimalUI = "0"
let NERDUsePlaceHolders = "1"
let NERDTreeMapRefresh = "r"
let Tlist_Compact_Format =  0 
let NERDTreeMapHelp = "?"
let Tlist_Use_Horiz_Window =  0 
let NERDTreeBookmarksFile = "/Users/bbunge/.NERDTreeBookmarks"
let NERDCompactSexyComs = "0"
let NERDTreeWinSize = "31"
let NERDTreeMapOpenInTab = "t"
let NERDTreeSortDirs = "1"
let MRU_Exclude_Files = ""
let Tlist_Ctags_Cmd = "ctags"
let NERDTreeHighlightCursorline = "1"
let MRU_Use_Current_Window =  0 
let MRU_Add_Menu =  1 
let Tlist_Process_File_Always =  0 
let NERDTreeMapPreview = "go"
let EasyMotion_do_mapping =  1 
let Tlist_Use_SingleClick =  0 
let MRU_Max_Entries =  100 
let NERDTreeMapActivateNode = "o"
let BufKillCommandWhenLastBufferKilled = "enew"
let EasyMotion_loaded =  1 
let BufKillFunctionSelectingValidBuffersToDisplay = "buflisted"
let NERDTreeWinPos = "left"
let EasyMotion_mapping_E = "mE"
let NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"
let Tlist_Display_Tag_Scope =  1 
let NERDTreeMapJumpPrevSibling = "<C-k>"
let NERDTreeMapOpenInTabSilent = "T"
let NERDTreeMapJumpParent = "p"
let NERDTreeMapToggleFilters = "f"
let TagList_title = "__Tag_List__"
let SuperTabRetainCompletionType =  1 
let NERDTreeMapQuit = "q"
let NERDTreeShowBookmarks =  1 
let NERDMenuMode = "3"
let NERDTreeMapRefreshRoot = "R"
let NERDDefaultNesting = "1"
let Tlist_Highlight_Tag_On_BufEnter =  1 
let Tlist_Auto_Highlight_Tag =  1 
let NERDTreeRemoveDirCmd = "rm -rf "
let EasyMotion_grouping =  1 
let NERDTreeAutoCenterThreshold = "3"
let NERDTreeMapOpenVSplit = "s"
let NERDCreateDefaultMappings = "1"
let NERDTreeMapOpenSplit = "i"
let NERDTreeCaseSensitiveSort = "0"
let NERDTreeHijackNetrw = "1"
let Tlist_Max_Submenu_Items =  20 
let NERDTreeShowLineNumbers = "0"
let MRU_Max_Menu_Entries =  10 
let Tlist_GainFocus_On_ToggleOpen =  0 
let NERDLPlace = "[>"
let EasyMotion_mapping_B = "mB"
let NERDTreeMouseMode = "1"
let EasyMotion_mapping_F = "mF"
let Tlist_WinHeight =  10 
let EasyMotion_mapping_T = "mT"
let EasyMotion_mapping_W = "mW"
let EasyMotion_mapping_b = "mb"
let Tlist_Inc_Winwidth =  1 
let EasyMotion_mapping_e = "me"
let EasyMotion_mapping_f = "mf"
let Tlist_Auto_Update =  1 
let EasyMotion_mapping_j = "mj"
let EasyMotion_mapping_k = "mk"
let EasyMotion_mapping_t = "mt"
let MRU_File = "/Users/bbunge/.vim_mru_files"
let EasyMotion_mapping_w = "mw"
let BufKillActionWhenBufferDisplayedInAnotherWindow = "confirm"
let NERDChristmasTree = "1"
let NERDTreeNotificationThreshold = "100"
let NERDTreeChDirMode = "0"
let BufKillOverrideCtrlCaret =  0 
let MRU_Max_Submenu_Entries =  10 
let NERDTreeMapJumpRoot = "P"
let BufExplorer_title = "[Buf List]"
let NERDTreeMapChdir = "cd"
let NERDRPlace = "<]"
let Tlist_Exit_OnlyWindow =  0 
let EasyMotion_do_shade =  1 
let NERDTreeMapToggleZoom = "A"
let NERDTreeMapPreviewVSplit = "gs"
let Tlist_Display_Prototype =  0 
let NERDRemoveExtraSpaces = "0"
let NERDTreeMapUpdir = "u"
let EasyMotion_mapping_gE = "mgE"
let MRU_Window_Height =  8 
let Tlist_Max_Tag_Length =  10 
let NERDRemoveAltComs = "1"
let NERDTreeAutoCenter = "1"
let BufKillVerbose =  1 
let Tlist_WinWidth =  30 
let NERDTreeMapDeleteBookmark = "D"
let MRU_Auto_Close =  1 
let NERDBlockComIgnoreEmpty = "0"
let Tlist_Close_On_Select =  0 
let Tlist_File_Fold_Auto_Close =  0 
let Tlist_Auto_Open =  0 
let EasyMotion_leader_key = ","
let NERDTreeShowFiles = "1"
let NERDCommentWholeLinesInVMode = "0"
let NERDTreeCopyCmd = "cp -r "
let NERDTreeMapChangeRoot = "C"
let NERDTreeMapToggleFiles = "F"
let EasyMotion_keys = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
let NERDAllowAnyVisualDelims = "1"
let NERDTreeDirArrows = "0"
let NERDTreeMapOpenExpl = "e"
let NERDTreeMapJumpNextSibling = "<C-j>"
let NERDTreeMapJumpFirstChild = "K"
let Tlist_Use_Right_Window =  0 
let NERDTreeMapOpenRecursively = "O"
let NERDTreeMapToggleBookmarks = "B"
let NERDTreeMapMenu = "m"
let NERDTreeMapUpdirKeepOpen = "U"
let NERDTreeQuitOnOpen = "0"
let Tlist_Show_Menu =  0 
let EasyMotion_mapping_ge = "mge"
let NERDTreeMapToggleHidden = "I"
let Tlist_Sort_Type = "order"
let NERDTreeMapJumpLastChild = "J"
silent only
cd /Applications/MAMP/htdocs/dorm_website
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 README
badd +19 application/views/common/header.php
badd +36 ~/.vimrc
badd +0 application/cache/index.html
badd +0 application/config/
badd +0 application/config/autoload.php
badd +0 application/config/config.php
badd +0 application/config/constants.php
badd +0 application/config/database.php
badd +0 application/config/db_credentials.secret.php
badd +0 application/config/doctypes.php
badd +0 application/config/foreign_chars.php
badd +0 application/config/hooks.php
badd +0 application/config/index.html
badd +0 application/config/mimes.php
badd +0 application/config/profiler.php
badd +0 application/config/routes.php
badd +0 application/config/smileys.php
badd +0 application/config/user_agents.php
badd +0 application/controllers/
badd +7 application/controllers/calendar.php
badd +143 application/controllers/event.php
badd +0 application/controllers/event_sign_ups.php
badd +0 application/controllers/form.php
badd +0 application/controllers/index.html
badd +0 application/controllers/sign_up.php
badd +0 application/controllers/sign_up_response.php
badd +18 application/controllers/user_directory.php
badd +0 application/controllers/welcome.php
badd +0 application/core/
badd +0 application/core/index.html
badd +0 application/errors/
badd +0 application/errors/error_404.php
badd +0 application/errors/error_db.php
badd +0 application/errors/error_general.php
badd +0 application/errors/error_php.php
badd +0 application/errors/index.html
badd +0 application/helpers/
badd +0 application/helpers/event/
badd +0 application/helpers/event/form_builder_helper.php
badd +0 application/helpers/index.html
badd +0 application/hooks/
badd +0 application/hooks/index.html
badd +0 application/index.html
badd +0 application/language/
badd +0 application/language/english/
badd +0 application/language/english/index.html
badd +0 application/libraries/
badd +0 application/libraries/index.html
badd +0 application/logs/
badd +0 application/logs/index.html
badd +0 application/models/
badd +0 application/models/event_model.php
badd +0 application/models/event_sign_ups_model.php
badd +0 application/models/gcal_model.php
badd +0 application/models/google_credentials.secret.php
badd +0 application/models/index.html
badd +0 application/models/sign_up_model.php
badd +0 application/models/sign_up_response_model.php
badd +0 application/models/user_model.php
badd +0 application/third_party/
badd +0 application/third_party/index.html
badd +0 application/views/
badd +0 application/views/calendar/
badd +11 application/views/calendar/index.php
badd +0 application/views/calendar/sidebar.php
badd +0 application/views/common/
badd +0 application/views/common/footer.php
badd +0 application/views/event/
badd +0 application/views/event/create.bak.php
badd +32 application/views/event/create.php
badd +1 application/views/event/edit.php
badd +62 application/views/event/view.php
badd +111 application/views/event/view_all.php
badd +0 application/views/event_sign_ups/
badd +2 application/views/event_sign_ups/view.php
badd +0 application/views/index.html
badd +0 application/views/sign_up/
badd +2 application/views/sign_up/form_create.php
badd +0 application/views/sign_up/form_fields/
badd +0 application/views/sign_up/form_fields/checkboxes.php
badd +0 application/views/sign_up/form_fields/choose_from_a_list.php
badd +0 application/views/sign_up/form_fields/field.php
badd +0 application/views/sign_up/form_fields/fields.php
badd +0 application/views/sign_up/form_fields/multiple_choice.php
badd +0 application/views/sign_up/form_fields/paragraph_text.php
badd +0 application/views/sign_up/form_fields/text.php
badd +0 application/views/user_directory/
badd +0 application/views/user_directory/index.php
badd +0 application/views/welcome_message.php
badd +0 assets/css/style.css
badd +49 assets/css/reset.css
args application/cache/ application/cache/index.html application/config/ application/config/autoload.php application/config/config.php application/config/constants.php application/config/database.php application/config/db_credentials.secret.php application/config/doctypes.php application/config/foreign_chars.php application/config/hooks.php application/config/index.html application/config/mimes.php application/config/profiler.php application/config/routes.php application/config/smileys.php application/config/user_agents.php application/controllers/ application/controllers/calendar.php application/controllers/event.php application/controllers/event_sign_ups.php application/controllers/form.php application/controllers/index.html application/controllers/sign_up.php application/controllers/sign_up_response.php application/controllers/user_directory.php application/controllers/welcome.php application/core/ application/core/index.html application/errors/ application/errors/error_404.php application/errors/error_db.php application/errors/error_general.php application/errors/error_php.php application/errors/index.html application/helpers/ application/helpers/event/ application/helpers/event/form_builder_helper.php application/helpers/index.html application/hooks/ application/hooks/index.html application/index.html application/language/ application/language/english/ application/language/english/index.html application/libraries/ application/libraries/index.html application/logs/ application/logs/index.html application/models/ application/models/event_model.php application/models/event_sign_ups_model.php application/models/gcal_model.php application/models/google_credentials.secret.php application/models/index.html application/models/sign_up_model.php application/models/sign_up_response_model.php application/models/user_model.php application/third_party/ application/third_party/index.html application/views/ application/views/calendar/ application/views/calendar/index.php application/views/calendar/sidebar.php application/views/common/ application/views/common/footer.php application/views/common/header.php application/views/event/ application/views/event/create.bak.php application/views/event/create.php application/views/event/edit.php application/views/event/view.php application/views/event/view_all.php application/views/event_sign_ups/ application/views/event_sign_ups/view.php application/views/index.html application/views/sign_up/ application/views/sign_up/form_create.php application/views/sign_up/form_fields/ application/views/sign_up/form_fields/checkboxes.php application/views/sign_up/form_fields/choose_from_a_list.php application/views/sign_up/form_fields/field.php application/views/sign_up/form_fields/fields.php application/views/sign_up/form_fields/multiple_choice.php application/views/sign_up/form_fields/paragraph_text.php application/views/sign_up/form_fields/text.php application/views/user_directory/ application/views/user_directory/index.php application/views/welcome_message.php
set lines=61 columns=200
winpos 4 878
edit application/views/common/header.php
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 100 + 100) / 200)
exe 'vert 2resize ' . ((&columns * 99 + 100) / 200)
argglobal
edit application/views/common/header.php
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <RightMouse> <Plug>delimitMateMRightMouse
imap <buffer> <LeftMouse> <Plug>delimitMateMLeftMouse
imap <buffer> <S-Up> <Plug>delimitMateS-Up
imap <buffer> <S-Down> <Plug>delimitMateS-Down
imap <buffer> <PageDown> <Plug>delimitMatePageDown
imap <buffer> <PageUp> <Plug>delimitMatePageUp
imap <buffer> <Down> <Plug>delimitMateDown
imap <buffer> <Up> <Plug>delimitMateUp
imap <buffer> <End> <Plug>delimitMateEnd
imap <buffer> <Home> <Plug>delimitMateHome
imap <buffer> <Right> <Plug>delimitMateRight
imap <buffer> <Left> <Plug>delimitMateLeft
imap <buffer> <Del> <Plug>delimitMateDel
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =len(b:_l_delimitMate_buffer) ? delimitMate#Finish(0) : delimitMate#JumpMany()
onoremap <buffer> <silent> [[ ?\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)?:nohls
nnoremap <buffer> <silent> [[ ?\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)?:nohls
onoremap <buffer> <silent> ]] /\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)/:nohls
nnoremap <buffer> <silent> ]] /\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)/:nohls
imap <buffer> <silent> g <Plug>delimitMateJumpMany
cnoremap <buffer> <expr>  fugitive#buffer().rev()
imap <buffer>  <Plug>delimitMateEsc
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> < <Plug>delimitMate<
imap <buffer> > <Plug>delimitMate>
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
set colorcolumn=81
setlocal colorcolumn=81
setlocal comments=s1:/*,mb:*,ex:*/,://,:#
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'php'
setlocal filetype=php
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=qrowcb
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=\\(require\\|include\\)\\(_once\\)\\?
setlocal includeexpr=
setlocal indentexpr=GetPhpIndent()
setlocal indentkeys=0{,0},0),:,!^F,o,O,e,*<Return>,=?>,=<?,=*/
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,$
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=phpcomplete#CompletePHP
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'php'
setlocal syntax=php
endif
setlocal tabstop=2
setlocal tags=tags;/,/Applications/MAMP/htdocs/dorm_website/.git/php.tags,/Applications/MAMP/htdocs/dorm_website/.git/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 19 - ((17 * winheight(0) + 29) / 59)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
19
normal! 012l
wincmd w
argglobal
edit assets/css/style.css
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <RightMouse> <Plug>delimitMateMRightMouse
imap <buffer> <LeftMouse> <Plug>delimitMateMLeftMouse
imap <buffer> <S-Up> <Plug>delimitMateS-Up
imap <buffer> <S-Down> <Plug>delimitMateS-Down
imap <buffer> <PageDown> <Plug>delimitMatePageDown
imap <buffer> <PageUp> <Plug>delimitMatePageUp
imap <buffer> <Down> <Plug>delimitMateDown
imap <buffer> <Up> <Plug>delimitMateUp
imap <buffer> <End> <Plug>delimitMateEnd
imap <buffer> <Home> <Plug>delimitMateHome
imap <buffer> <Right> <Plug>delimitMateRight
imap <buffer> <Left> <Plug>delimitMateLeft
imap <buffer> <Del> <Plug>delimitMateDel
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =len(b:_l_delimitMate_buffer) ? delimitMate#Finish(0) : delimitMate#JumpMany()
imap <buffer> <silent> g <Plug>delimitMateJumpMany
cnoremap <buffer> <expr>  fugitive#buffer().rev()
imap <buffer>  <Plug>delimitMateEsc
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
set colorcolumn=81
setlocal colorcolumn=81
setlocal comments=s1:/*,mb:*,ex:*/
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'css'
setlocal filetype=css
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croql
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=^\\s*@import\\s\\+\\%(url(\\)\\=
setlocal includeexpr=
setlocal indentexpr=GetCSSIndent()
setlocal indentkeys=0{,0},!^F,o,O
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=csscomplete#CompleteCSS
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'css'
setlocal syntax=css
endif
setlocal tabstop=2
setlocal tags=tags;/,/Applications/MAMP/htdocs/dorm_website/.git/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 29) / 59)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 100 + 100) / 200)
exe 'vert 2resize ' . ((&columns * 99 + 100) / 200)
tabedit application/controllers/calendar.php
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 100 + 100) / 200)
exe 'vert 2resize ' . ((&columns * 99 + 100) / 200)
argglobal
edit application/controllers/calendar.php
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <RightMouse> <Plug>delimitMateMRightMouse
imap <buffer> <LeftMouse> <Plug>delimitMateMLeftMouse
imap <buffer> <S-Up> <Plug>delimitMateS-Up
imap <buffer> <S-Down> <Plug>delimitMateS-Down
imap <buffer> <PageDown> <Plug>delimitMatePageDown
imap <buffer> <PageUp> <Plug>delimitMatePageUp
imap <buffer> <Down> <Plug>delimitMateDown
imap <buffer> <Up> <Plug>delimitMateUp
imap <buffer> <End> <Plug>delimitMateEnd
imap <buffer> <Home> <Plug>delimitMateHome
imap <buffer> <Right> <Plug>delimitMateRight
imap <buffer> <Left> <Plug>delimitMateLeft
imap <buffer> <Del> <Plug>delimitMateDel
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =len(b:_l_delimitMate_buffer) ? delimitMate#Finish(0) : delimitMate#JumpMany()
onoremap <buffer> <silent> [[ ?\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)?:nohls
nnoremap <buffer> <silent> [[ ?\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)?:nohls
onoremap <buffer> <silent> ]] /\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)/:nohls
nnoremap <buffer> <silent> ]] /\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)/:nohls
imap <buffer> <silent> g <Plug>delimitMateJumpMany
cnoremap <buffer> <expr>  fugitive#buffer().rev()
imap <buffer>  <Plug>delimitMateEsc
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> < <Plug>delimitMate<
imap <buffer> > <Plug>delimitMate>
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
set colorcolumn=81
setlocal colorcolumn=81
setlocal comments=s1:/*,mb:*,ex:*/,://,:#
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'php'
setlocal filetype=php
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=qrowcb
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=\\(require\\|include\\)\\(_once\\)\\?
setlocal includeexpr=
setlocal indentexpr=GetPhpIndent()
setlocal indentkeys=0{,0},0),:,!^F,o,O,e,*<Return>,=?>,=<?,=*/
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,$
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=phpcomplete#CompletePHP
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'php'
setlocal syntax=php
endif
setlocal tabstop=2
setlocal tags=tags;/,/Applications/MAMP/htdocs/dorm_website/.git/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 7 - ((6 * winheight(0) + 31) / 62)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
7
normal! 0
wincmd w
argglobal
edit application/views/event/edit.php
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <RightMouse> <Plug>delimitMateMRightMouse
imap <buffer> <LeftMouse> <Plug>delimitMateMLeftMouse
imap <buffer> <S-Up> <Plug>delimitMateS-Up
imap <buffer> <S-Down> <Plug>delimitMateS-Down
imap <buffer> <PageDown> <Plug>delimitMatePageDown
imap <buffer> <PageUp> <Plug>delimitMatePageUp
imap <buffer> <Down> <Plug>delimitMateDown
imap <buffer> <Up> <Plug>delimitMateUp
imap <buffer> <End> <Plug>delimitMateEnd
imap <buffer> <Home> <Plug>delimitMateHome
imap <buffer> <Right> <Plug>delimitMateRight
imap <buffer> <Left> <Plug>delimitMateLeft
imap <buffer> <Del> <Plug>delimitMateDel
imap <buffer> <S-BS> <Plug>delimitMateS-BS
imap <buffer> <BS> <Plug>delimitMateBS
inoremap <buffer> <Plug>delimitMateJumpMany =len(b:_l_delimitMate_buffer) ? delimitMate#Finish(0) : delimitMate#JumpMany()
onoremap <buffer> <silent> [[ ?\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)?:nohls
nnoremap <buffer> <silent> [[ ?\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)?:nohls
onoremap <buffer> <silent> ]] /\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)/:nohls
nnoremap <buffer> <silent> ]] /\(.*\%#\)\@!\_^\s*\zs\(\(abstract\s\+\|final\s\+\|private\s\+\|protected\s\+\|public\s\+\|static\s\+\)*function\|\(abstract\s\+\|final\s\+\)*class\|interface\)/:nohls
imap <buffer> <silent> g <Plug>delimitMateJumpMany
cnoremap <buffer> <expr>  fugitive#buffer().rev()
imap <buffer>  <Plug>delimitMateEsc
imap <buffer> " <Plug>delimitMate"
imap <buffer> ' <Plug>delimitMate'
imap <buffer> ( <Plug>delimitMate(
imap <buffer> ) <Plug>delimitMate)
imap <buffer> < <Plug>delimitMate<
imap <buffer> > <Plug>delimitMate>
imap <buffer> [ <Plug>delimitMate[
imap <buffer> ] <Plug>delimitMate]
imap <buffer> ` <Plug>delimitMate`
imap <buffer> { <Plug>delimitMate{
imap <buffer> } <Plug>delimitMate}
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
set colorcolumn=81
setlocal colorcolumn=81
setlocal comments=s1:/*,mb:*,ex:*/,://,:#
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'php'
setlocal filetype=php
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=qrowcb
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=\\(require\\|include\\)\\(_once\\)\\?
setlocal includeexpr=
setlocal indentexpr=GetPhpIndent()
setlocal indentkeys=0{,0},0),:,!^F,o,O,e,*<Return>,=?>,=<?,=*/
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,$
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=phpcomplete#CompletePHP
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=2
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'php'
setlocal syntax=php
endif
setlocal tabstop=2
setlocal tags=tags;/,/Applications/MAMP/htdocs/dorm_website/.git/tags
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 35 - ((34 * winheight(0) + 31) / 62)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
35
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 100 + 100) / 200)
exe 'vert 2resize ' . ((&columns * 99 + 100) / 200)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
